if [ ! "$1" ]; then
    echo "\$1 is empty, set num=10"
    num=10
else
    echo "set num=$1"
    num=$1
fi

timer_start=`date "+%Y-%m-%d %H:%M:%S"`


git clone git://sourceware.org/git/binutils-gdb.git cxxfilt-CVE-2016-4490
rm -r --interactive=never obj-aflgo
rm -r --interactive=never obj-dist
export AFLGO=$HOME/formal-experiments/stage2/aflgo-arithmetic-appr # switch to other aflgo variants here
cd cxxfilt-CVE-2016-4490
git checkout 2c49145
mkdir obj-aflgo; mkdir obj-aflgo/temp
export SUBJECT=$PWD; export TMP_DIR=$PWD/obj-aflgo/temp
export CC=$AFLGO/afl-clang-fast; export CXX=$AFLGO/afl-clang-fast++
export LDFLAGS=-lpthread
export ADDITIONAL="-targets=$TMP_DIR/BBtargets.txt -outdir=$TMP_DIR -flto -fuse-ld=gold -Wl,-plugin-opt=save-temps"
echo $'cxxfilt.c:227\ncxxfilt.c:62\ncplus-dem.c:864\ncp-demangle.c:6098\ncp-demangle.c:5938\ncp-demangle.c:5894\ncp-demangle.c:1172\ncp-demangle.c:1255\ncp-demangle.c:1399\ncp-demangle.c:1596' > $TMP_DIR/BBtargets.txt

cd obj-aflgo
CFLAGS="-DFORTIFY_SOURCE=2 -fstack-protector-all -fno-omit-frame-pointer -g -Wno-error $ADDITIONAL" LDFLAGS="-ldl -lutil" ../configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim --disable-ld

make clean
make

cat $TMP_DIR/BBnames.txt | rev | cut -d: -f2- | rev | sort | uniq > $TMP_DIR/BBnames2.txt && mv $TMP_DIR/BBnames2.txt $TMP_DIR/BBnames.txt
cat $TMP_DIR/BBcalls.txt | sort | uniq > $TMP_DIR/BBcalls2.txt && mv $TMP_DIR/BBcalls2.txt $TMP_DIR/BBcalls.txt
echo "PWD: $PWD"
cd binutils
# $AFLGO/scripts/genDistance.sh $PWD $TMP_DIR cxxfilt
$AFLGO/scripts/gen_distance_fast.py $PWD $TMP_DIR cxxfilt --python-only
timer_mid=`date "+%Y-%m-%d %H:%M:%S"`


cd ../../; mkdir obj-dist; cd obj-dist; # work around because cannot run make distclean
CFLAGS="-DFORTIFY_SOURCE=2 -fstack-protector-all -fno-omit-frame-pointer -g -Wno-error -distance=$TMP_DIR/distance.cfg.txt" LDFLAGS="-ldl -lutil" ../configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim --disable-ld
make
mkdir in; echo "" > in/in


mkdir out
project_name=$0
for((i=0;i<$num;i++));
do
    screen_name=$"${project_name:2}-0$i"
    echo $screen_name
    screen -dmS $screen_name
    screen -x -S $screen_name -X stuff "timeout -s INT 24h $AFLGO/afl-fuzz -m none -z exp -c 21h -i in -o "out/out_$i" binutils/cxxfilt"
    screen -x -S $screen_name -X stuff $"\n"
done


timer_end=`date "+%Y-%m-%d %H:%M:%S"`

duration1=`echo $(($(date +%s -d "${timer_mid}") - $(date +%s -d "${timer_start}"))) | awk '{t=split("60 s 60 m 24 h 999 d",a);for(n=1;n<t;n+=2){if($1==0)break;s=$1%a[n]a[n+1]s;$1=int($1/a[n])}print s}'`
duration2=`echo $(($(date +%s -d "${timer_end}") - $(date +%s -d "${timer_mid}"))) | awk '{t=split("60 s 60 m 24 h 999 d",a);for(n=1;n<t;n+=2){if($1==0)break;s=$1%a[n]a[n+1]s;$1=int($1/a[n])}print s}'`
echo "task start at:    $timer_start"
echo "task mid at:      $timer_mid"
echo "task end at:      $timer_end"

echo "compile takes:    $duration1"
echo "fuzz takes:       $duration2"