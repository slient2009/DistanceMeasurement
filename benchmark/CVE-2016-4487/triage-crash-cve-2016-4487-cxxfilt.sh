if [ ! "$1" ]; then
    echo "patched target(\$1) not defined"
    return 
else
    echo "patched target   = $1"
    patch_target=$1
fi

if [ ! "$2" ]; then
    echo "unpatched target(\$2) not defined"
    return 
else
    echo "unpatched target = $2"
    unpatch_target=$2
fi

if [ ! "$3" ]; then
    echo "aflgo crash_dir(\$3) not defined"
    return 
else
    echo "aflgo crash_dir  = $3"
    crash_dir=$3
fi

if [ "$4" ]; then
    echo "record only $4 real_crash"
    real_crash_record_cnt=$4
else
    echo "record all real_crash"
    real_crash_record_cnt=114514
fi



# patch_target="/home/wenake/AFLGo-testcase/cxxfilt-CVE-2016-4487/cxxfilt-CVE-2016-4487-patched/patch/binutils/cxxfilt"
# unpatch_target="/home/wenake/AFLGo-testcase/cxxfilt-CVE-2016-4487/cxxfilt-CVE-2016-4487-unpatched/unpatch/binutils/cxxfilt"
# crash_dir="/home/wenake/AFLGo-testcase/cxxfilt-CVE-2016-4487/cxxfilt-CVE-2016-4487-mindis/obj-dist/out/out_$idx/crashes"
# real_crash=1

asan_string="AddressSanitizer"
asan_string_pattern1="==ERROR: AddressSanitizer"
asan_string_pattern2="SUMMARY: AddressSanitizer:"

cd $crash_dir
rm real_crash.txt
crashes=$(ls)
for crashi in $crashes
do
    crash_patch=false
    crash_unpatch=false
    out_lines=$($unpatch_target < $crashi 2>&1 | grep $asan_string)
    if [[ $out_lines == *$asan_string_pattern1*$asan_string_pattern2* ]]; then
        crash_unpatch=true
    fi

    out_lines=$($patch_target < $crashi 2>&1 | grep $asan_string)
    if [[ $out_lines == *$asan_string_pattern1*$asan_string_pattern2* ]]; then
        crash_patch=true
    fi

    if [ $crash_unpatch = true ] && [ $crash_patch = false ]; then
        if [[ real_crash_record_cnt -le 0 ]]; then
            break
        fi
        echo $crashi >> real_crash.txt
        echo "[REAL_CRASH]: $crashi"
        real_crash_record_cnt=$real_crash_record_cnt-1
    fi
    
done

echo "$crash_dir/real_crash.txt"